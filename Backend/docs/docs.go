// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "This function initializes and registers all the API routes for users, roles, permissions, and role permissions.",
                "tags": [
                    "Initialization"
                ],
                "summary": "Initialize routes",
                "responses": {}
            }
        },
        "/api/permissions": {
            "post": {
                "description": "Defines all the routes related to permission operations such as creating, updating, deleting, and associating roles with permissions.",
                "tags": [
                    "Permission"
                ],
                "summary": "Register permission routes",
                "responses": {}
            }
        },
        "/api/role_permissions": {
            "post": {
                "description": "Defines all the routes related to managing role-permission associations.",
                "tags": [
                    "RolePermission"
                ],
                "summary": "Register role permission routes",
                "responses": {}
            }
        },
        "/api/roles": {
            "post": {
                "description": "Defines all the routes related to role operations such as creating, updating, and deleting roles.",
                "tags": [
                    "Role"
                ],
                "summary": "Register role routes",
                "responses": {}
            }
        },
        "/api/user": {
            "post": {
                "description": "Defines all the routes related to user operations such as registration, login, token refresh, etc.",
                "tags": [
                    "User"
                ],
                "summary": "Register user routes",
                "responses": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
